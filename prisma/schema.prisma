// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Empresa {
  id                    String   @id @default(uuid()) @db.Uuid
  idEstrangeira         Int?     @unique
  estrangeira           Boolean  @default(false)
  cnpj                  String?  @unique
  razaoSocial           String?
  nomeFantasia          String?
  anoFundacao           Int
  atividadePrincipal    String?
  atividadeSecundaria  String[]
  situacao              String?
  historicoFaturamentos Faturamento[]
  historicoInvestimentos  Investimento[]
  historicoQuadroDeColaboradores  QuadroDeColaboradores[]
  incubacoes            Incubacao[]
  socios                Socio[]
  dadosBrasilAPI        Json?
}

model Faturamento {
  empresaId String   @db.Uuid
  empresa   Empresa  @relation(fields: [empresaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  anoFiscal Int
  valor     BigInt

  @@id([empresaId, anoFiscal])
}

model QuadroDeColaboradores {
  empresaId String   @db.Uuid
  empresa   Empresa  @relation(fields: [empresaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  anoFiscal Int
  valor     BigInt

  @@id([empresaId, anoFiscal])
}

model Investimento {
  id                    String   @id @default(uuid()) @db.Uuid
  empresaId String   @db.Uuid
  empresa   Empresa  @relation(fields: [empresaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  origem    String
  anoFiscal Int
  valor     BigInt
}

model Incubacao {
  id                    String   @id @default(uuid()) @db.Uuid
  empresaId String   @db.Uuid
  empresa   Empresa  @relation(fields: [empresaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  incubadora String
  estado     String
}

model Socio {
  id                    String   @id @default(uuid()) @db.Uuid
  empresaId String   @db.Uuid
  empresa   Empresa  @relation(fields: [empresaId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  nome      String
  email     String?
  telefone  String?
  tipoVinculo String?
  NUSP       String?
  instituto  String?
}

